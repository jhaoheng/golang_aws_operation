version: "3.7"
services:
  app:
    image: golang:1.14.3
    container_name: app
    volumes: 
      - ./appFunc_A:/go/src/appFunc_A
      - ./appFunc_B:/go/src/appFunc_B
      - ./lambda/funcA:/root/lambda/funcA
      - ./lambda/funcB:/root/lambda/funcB
    working_dir: /go/src
    tty: true

  lambdaA:
    image: lambci/lambda:go1.x
    container_name: lambdaA
    volumes: 
      - ./lambda/funcA:/var/task:ro,delegated
    ports: 
      - 9001:9001
    environment: 
      - DOCKER_LAMBDA_STAY_OPEN=1
      - DOCKER_LAMBDA_WATCH=1
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_REGION=us-east-1
      - _HANDLER=main # handler 名稱
      - AWS_LAMBDA_FUNCTION_NAME=main
      - AWS_LAMBDA_FUNCTION_TIMEOUT=1
    restart: always

  lambdaB: 
    image: lambci/lambda:go1.x
    container_name: lambdaB
    volumes: 
      - ./lambda/funcB:/var/task:ro,delegated
    ports: 
      - 9002:9001
    environment: 
      - DOCKER_LAMBDA_STAY_OPEN=1
      - DOCKER_LAMBDA_WATCH=1
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_REGION=us-east-1
      - _HANDLER=main # handler 名稱
      - AWS_LAMBDA_FUNCTION_NAME=main
      - AWS_LAMBDA_FUNCTION_TIMEOUT=1
    restart: always